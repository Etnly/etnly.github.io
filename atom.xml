<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Etnly&#39;s Blog</title>
  
  <subtitle>Hello,World</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/child/"/>
  <updated>2018-05-14T14:10:07.548Z</updated>
  <id>http://yoursite.com/child/</id>
  
  <author>
    <name>Yu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python基础</title>
    <link href="http://yoursite.com/child/2016/05/27/Python%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/child/2016/05/27/Python基础/</id>
    <published>2016-05-26T16:00:00.000Z</published>
    <updated>2018-05-14T14:10:07.548Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python基础"><a href="#Python基础" class="headerlink" title="Python基础"></a><strong>Python基础</strong></h1><p>🤔</p><hr><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a><strong>注释</strong></h2><ul><li>Python中注释以“#”开头：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 这里是注释</span><br><span class="line">say = &apos;Hello, World&apos;</span><br><span class="line">print(say) #输出say的值</span><br></pre></td></tr></table></figure></li></ul><p>如上所示，注释可以单独占一行，也可以加入到代码结尾。</p><hr><h2 id="赋值"><a href="#赋值" class="headerlink" title="赋值"></a><strong>赋值</strong></h2><ul><li><strong>赋值语句</strong>可以创建新的变量，并为其赋值：<pre><code>`say = &apos;Hello, World&apos;``num = 7`</code></pre>第一个语句将<strong>字符串</strong>赋给“say”变量；第二个语句将17赋给num。</li></ul><hr><h2 id="表达式"><a href="#表达式" class="headerlink" title="表达式"></a><strong>表达式</strong></h2><ul><li><strong>表达式</strong>是变量、值、操作符的组合，单独的值与变量也被看作一个表达式</li></ul><hr><h2 id="语句"><a href="#语句" class="headerlink" title="语句"></a><strong>语句</strong></h2><ul><li><strong>语句</strong>是一段可以产生效果的代码单元，如创建一个变量或显示一个值：<pre><code>`say = &apos;Hello, World&apos;``print(say)`</code></pre>print语句显示say的值</li></ul><hr><h2 id="控制流"><a href="#控制流" class="headerlink" title="控制流"></a><strong>控制流</strong></h2><h3 id="if语句"><a href="#if语句" class="headerlink" title="if语句"></a><strong>if语句</strong></h3><ul><li><strong>if语句</strong>用以检查条件:如果 条件为真(True)，我们将运行一块语句(if 块)，否则 我们将运行另一块语句(else 块)。else 从句是可选 的。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">num = 7</span><br><span class="line">if num &gt; 0:</span><br><span class="line">  print(&apos;num为正数&apos;)</span><br><span class="line">elif num == 0:</span><br><span class="line">  print(&apos;num等于0&apos;)</span><br><span class="line">else:</span><br><span class="line">  print(&apos;num为负数&apos;)</span><br></pre></td></tr></table></figure></li></ul><p>此处输出：<br><code>num为正数</code></p><h3 id="for语句"><a href="#for语句" class="headerlink" title="for语句"></a><strong>for语句</strong></h3><ul><li>for…in 语句是循环语句的一种，其特点是会在一系列对象上进行迭代，意即它会遍历序列中的每一个项目。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">for i in range(1, 10):</span><br><span class="line">  print(i) </span><br><span class="line">else:</span><br><span class="line">  print(&apos;循环结束&apos;)</span><br></pre></td></tr></table></figure></li></ul><p>此处输出：<br><code>1 2 3 4 5 6 7 8 9 循环结束</code><br>for 循环就会在(1-9)这一范围内展开递归—— for i in range(1,10) 等价于 for i in [1，2，3， 4，5，6，7，8，9] ，这个操作将依次将队列里的每个数字(或是对象)分配给 i ，一次一个，然后以 每个 i 的值执行语句块<br>else 部分是可选的。当循环中包含他时，它总会在 for 循环结束后开始执 行，除非程序遇到了 break 语句。</p><h3 id="while语句"><a href="#while语句" class="headerlink" title="while语句"></a><strong>while语句</strong></h3><ul><li>while 语句能够让你在条件为真的前提下重复执行某块语句。 while 语句也是 一种循环语句。 while 语句同样可以拥有 else 子句作为可选选项。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">num = 7</span><br><span class="line">isRun = True</span><br><span class="line">whileisRun:</span><br><span class="line">  if num == 0:</span><br><span class="line">  isRun = False</span><br><span class="line">  else:</span><br><span class="line">  num = num - 1</span><br><span class="line">else:</span><br><span class="line">  print(num)</span><br></pre></td></tr></table></figure></li></ul><p>此处输出：<br><code>0</code><br>While会在循环开始前检查变量是否为true，之后再执行相应的 while 块，直到变量为false，循环结束。</p><h3 id="break语句"><a href="#break语句" class="headerlink" title="break语句"></a><strong>break语句</strong></h3><ul><li>break 语句用以中断循环语句，也就是中止循环语句的执行，即使循环条件没有变更为 False ，或队列中的项目尚未完全迭代依旧如此。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">for i in range(1, 10):</span><br><span class="line">  print(i) </span><br><span class="line">  if i == 3:</span><br><span class="line">  break</span><br><span class="line">else:</span><br><span class="line">  print(&apos;循环结束&apos;)</span><br></pre></td></tr></table></figure></li></ul><p>此处输出：<br><code>1 2 3</code></p><h3 id="continue语句"><a href="#continue语句" class="headerlink" title="continue语句"></a><strong>continue语句</strong></h3><ul><li>continue 语句用以告诉 Python 跳过当前循环块中的剩余语句，并继续该循环的下一次迭代。<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">while True:</span><br><span class="line">    s = input(&apos;请输入名字&apos;)</span><br><span class="line">    if s == &apos;yu&apos;:</span><br><span class="line">        break</span><br><span class="line">    if len(s) &lt; 2:</span><br><span class="line">        print(&apos;请输入至少两个字符&apos;)</span><br><span class="line">        continue</span><br><span class="line">    print(&apos;名字为&apos;, s)</span><br></pre></td></tr></table></figure></li></ul><p>此处接收用户输入的内容，只有字符串长度大于等于2程序才会对其进行处理。如果其长度小 于 2，便通过使用 continue 语句跳过代码块中的其余语句。</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a><strong>函数</strong></h2><ul><li><strong>函数</strong>是指可重复使用的程序片段。它们允许你为某个代码块赋􏰀名字，允许你通过这一特殊的名字在你的程序任何地方来运行代码块，并可重复任何次数。这就是所谓的调用函数。<br>函数可以通过关键字 def 来定义：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">def say():</span><br><span class="line">    print(&apos;Hello, World&apos;)</span><br><span class="line">say()</span><br></pre></td></tr></table></figure></li></ul><h3 id="函数参数"><a href="#函数参数" class="headerlink" title="函数参数"></a><strong>函数参数</strong></h3><ul><li>函数可以获取参数，这个参数的值由你所提供，借此，函数便可以利用这些值来做一些事情。这些参数与变量类似，这些变量的值在我们调用函数时已被定义，且在函数运行时均已赋值完成。在定义函数 时给定的名称称作“形参”，在调用函数时你所提供给函数的值称作“实 参”。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Python基础&quot;&gt;&lt;a href=&quot;#Python基础&quot; class=&quot;headerlink&quot; title=&quot;Python基础&quot;&gt;&lt;/a&gt;&lt;strong&gt;Python基础&lt;/strong&gt;&lt;/h1&gt;&lt;p&gt;🤔&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;注释&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="Python" scheme="http://yoursite.com/child/categories/Python/"/>
    
    
      <category term="基础" scheme="http://yoursite.com/child/tags/%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>Hello,world</title>
    <link href="http://yoursite.com/child/2015/07/23/Hello,World/"/>
    <id>http://yoursite.com/child/2015/07/23/Hello,World/</id>
    <published>2015-07-22T16:00:00.000Z</published>
    <updated>2018-05-14T14:00:18.160Z</updated>
    
    <content type="html"><![CDATA[<h1 id="First"><a href="#First" class="headerlink" title="First"></a>First</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;First&quot;&gt;&lt;a href=&quot;#First&quot; class=&quot;headerlink&quot; title=&quot;First&quot;&gt;&lt;/a&gt;First&lt;/h1&gt;
      
    
    </summary>
    
      <category term="介绍" scheme="http://yoursite.com/child/categories/%E4%BB%8B%E7%BB%8D/"/>
    
    
      <category term="Hello" scheme="http://yoursite.com/child/tags/Hello/"/>
    
  </entry>
  
</feed>
